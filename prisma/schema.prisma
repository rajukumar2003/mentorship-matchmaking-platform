// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  userName  String
  password  String
  Profile   Profile?
  notifications     Notification[]
  sentRequests      MentorshipRequest[] @relation("SentRequests")
  receivedRequests  MentorshipRequest[] @relation("ReceivedRequests")   
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id        String   @id @default(uuid())
  userId    String   @unique
  role      String   // "mentor" or "mentee"
  skills    String   // CSV or JSON
  interests String   // CSV or JSON
  bio       String?
  User      User     @relation(fields: [userId], references: [id])
}

model MentorshipRequest {
  id          String   @id @default(uuid())
  senderId    String
  receiverId  String
  status      String   // "pending", "accepted", "rejected"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  sender      User     @relation("SentRequests", fields: [senderId], references: [id])
  receiver    User     @relation("ReceivedRequests", fields: [receiverId], references: [id])
}

model Notification {
  id        String   @id @default(uuid())
  userId    String
  type      String   // 'request' | 'update'
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
}
